(()=>{"use strict";var e,t={608:(e,t,s)=>{s(260);class i{constructor(e,t){this.scene=e,this.animationData=t,this.createGameAnimations()}createGameAnimations(){for(const e of this.animationData.anims){let t;const s=[];if("generateFrameNames"===e.frames.typeOfGeneration)t=this.scene.anims.generateFrameNames(e.frames.key,{prefix:e.frames.prefix||"",start:e.frames.start||0,end:e.frames.end||0,suffix:e.frames.suffix||"",zeroPad:e.frames.zeroPad||0,frames:e.frames.frames||!1});else if("generateFrameNumbers"===e.frames.typeOfGeneration)t=this.scene.anims.generateFrameNumbers(e.frames.key,{start:e.frames.start||0,end:e.frames.end||-1,first:e.frames.first||!1,frames:e.frames.frames||!1});else for(const t of e.frames){const e={key:t.key,frame:t.frame,duration:t.duration||0,visible:t.visible};s.push(e)}this.scene.anims.create({key:e.key,frames:t||s,defaultTextureKey:e.defaultTextureKey||null,frameRate:e.frameRate||24,duration:e.duration,skipMissedFrames:e.skipMissedFrames||!0,delay:e.delay||0,repeat:e.repeat||0,repeatDelay:e.repeatDelay||0,yoyo:e.yoyo||!1,showOnStart:e.showOnStart||!1,hideOnComplete:e.hideOnComplete||!1})}}}class r extends Phaser.Scene{constructor(){super({key:"BootScene"})}preload(){this.cameras.main.setBackgroundColor(0),this.createLoadingGraphics(),this.load.on("progress",(e=>{this.progressBar.clear(),this.progressBar.fillStyle(8971347,1),this.progressBar.fillRect(this.cameras.main.width/4,this.cameras.main.height/2-16,this.cameras.main.width/2*e,16)}),this),this.load.on("complete",(()=>{this.animationHelperInstance=new i(this,this.cache.json.get("animationJSON")),this.progressBar.destroy(),this.loadingBar.destroy()}),this),this.load.pack("preload","./assets/pack.json","preload")}update(){this.scene.start("MenuScene")}createLoadingGraphics(){this.loadingBar=this.add.graphics(),this.loadingBar.fillStyle(16777215,1),this.loadingBar.fillRect(this.cameras.main.width/4-2,this.cameras.main.height/2-18,this.cameras.main.width/2+4,20),this.progressBar=this.add.graphics()}}class n extends Phaser.GameObjects.Sprite{constructor(e){super(e.scene,e.x,e.y,e.texture,e.frame),this.currentScene=e.scene,this.points=e.points,this.initSprite(),this.currentScene.add.existing(this)}initSprite(){this.setOrigin(0,0),this.setFrame(0),this.currentScene.physics.world.enable(this),this.body.setSize(8,8),this.body.setAllowGravity(!1)}update(){}collected(){this.destroy(),this.currentScene.registry.values.score+=this.points,this.currentScene.events.emit("scoreChanged")}}class a extends Phaser.GameObjects.Sprite{getContent(){return this.content}getBoxContentString(){return this.boxContent}constructor(e){super(e.scene,e.x,e.y,e.texture,e.frame),this.currentScene=e.scene,this.boxContent=e.content,this.initSprite(),this.currentScene.add.existing(this)}initSprite(){this.content=null,this.hitBoxTimeline=this.currentScene.add.timeline({}),this.setOrigin(0,0),this.setFrame(0),this.currentScene.physics.world.enable(this),this.body.setSize(16,16),this.body.setAllowGravity(!1),this.body.setImmovable(!0)}update(){}yoyoTheBoxUpAndDown(){this.hitBoxTimeline.add([{tween:{targets:this,props:{y:this.y-10},duration:60,ease:"Power0",yoyo:!0,onComplete:()=>{this.active=!1,this.setFrame(1)}}}])}spawnBoxContent(){return this.content=new n({scene:this.currentScene,x:this.x,y:this.y-16,texture:this.boxContent,points:1e3}),this.content}tweenBoxContent(e,t,s){this.hitBoxTimeline.add([{tween:{targets:this.content,props:e,delay:0,duration:t,ease:"Power0",onComplete:s}}])}startHitTimeline(){this.hitBoxTimeline.play()}popUpCollectible(){this.content&&(this.content.body.setVelocity(30,-50),this.content.body.setAllowGravity(!0),this.content.body.setGravityY(-300))}addCoinAndScore(e,t){this.currentScene.registry.values.coins+=e,this.currentScene.events.emit("coinsChanged"),this.currentScene.registry.values.score+=t,this.currentScene.events.emit("scoreChanged")}}class o extends Phaser.GameObjects.Sprite{constructor(e){super(e.scene,e.x,e.y,e.texture,e.frame),this.currentScene=e.scene,this.destroyingValue=e.value,this.initSprite(),this.currentScene.add.existing(this)}initSprite(){this.setOrigin(0,0),this.setFrame(0),this.currentScene.physics.world.enable(this),this.body.setSize(8,8),this.body.setAllowGravity(!1),this.body.setImmovable(!0)}update(){if(this.body.touching.down){for(let e=-2;e<2;e++){const e=this.currentScene.add.sprite(this.x,this.y,"brick").setOrigin(0,0).setDisplaySize(4,4);this.currentScene.physics.world.enable(e)}this.destroy(),this.currentScene.registry.values.score+=this.destroyingValue,this.currentScene.events.emit("scoreChanged")}}}class h extends Phaser.GameObjects.Sprite{constructor(e){super(e.scene,e.x,e.y,e.texture,e.frame),this.currentScene=e.scene,this.initSprite(),this.currentScene.add.existing(this)}initSprite(){this.isActivated=!1,this.isDying=!1,this.setOrigin(0,0),this.setFrame(0),this.currentScene.physics.world.enable(this),this.body.setSize(this.displayWidth,this.displayHeight)}showAndAddScore(){this.currentScene.registry.values.score+=this.dyingScoreValue,this.currentScene.events.emit("scoreChanged");const e=this.currentScene.add.dynamicBitmapText(this.x,this.y-20,"font",this.dyingScoreValue.toString(),4).setOrigin(0,0);this.currentScene.add.tween({targets:e,props:{y:e.y-25},duration:800,ease:"Power0",yoyo:!1,onComplete:function(){e.destroy()}})}}class c extends h{constructor(e){super(e),this.speed=-40,this.dyingScoreValue=100}update(){this.isDying?(this.anims.stop(),this.body.setVelocity(0,0),this.body.checkCollision.none=!0):this.isActivated?(this.body.setVelocityX(this.speed),(this.body.blocked.right||this.body.blocked.left)&&(this.speed=-this.speed,this.body.velocity.x=this.speed,this.body.blocked.right?this.setFlipX(!1):this.setFlipX(!0)),this.anims.play("dinoWalk",!0)):Phaser.Geom.Intersects.RectangleToRectangle(this.getBounds(),this.currentScene.cameras.main.worldView)&&(this.isActivated=!0)}gotHitOnHead(){this.isDying=!0,this.setFrame(2),this.showAndAddScore()}gotHitFromBulletOrMarioHasStar(){this.isDying=!0,this.body.setVelocityX(40),this.body.setVelocityY(-40),this.setFlipY(!0)}isDead(){this.destroy()}}class d extends h{constructor(e){super(e),this.speed=-40,this.dyingScoreValue=100}update(){this.isDying?(this.anims.stop(),this.body.setVelocity(0,0),this.body.checkCollision.none=!0):this.isActivated?(this.body.setVelocityX(this.speed),(this.body.blocked.right||this.body.blocked.left)&&(this.speed=-this.speed,this.body.velocity.x=this.speed,this.body.blocked.right?this.setFlipX(!1):this.setFlipX(!0)),this.anims.play("goombaColorWalk",!0)):Phaser.Geom.Intersects.RectangleToRectangle(this.getBounds(),this.currentScene.cameras.main.worldView)&&(this.isActivated=!0)}gotHitOnHead(){this.isDying=!0,this.setFrame(2),this.showAndAddScore()}gotHitFromBulletOrMarioHasStar(){this.isDying=!0,this.body.setVelocityX(40),this.body.setVelocityY(-40),this.setFlipY(!0)}isDead(){this.destroy()}}class l extends Phaser.GameObjects.Image{constructor(e){super(e.scene,e.x,e.y,e.texture,e.frame),this.currentScene=e.scene,this.initImage(),this.currentScene.add.existing(this),this.shotting=!0}initImage(){this.setOrigin(0,0),this.setFrame(0),this.currentScene.physics.world.enable(this),this.body.setSize(16,8),this.body.setAllowGravity(!1),this.body.setImmovable(!0),this.setScale(16/this.displayWidth,8/this.displayHeight).setAlpha(0)}initTween(e,t,s,i){this.x=e,this.y=t,this.setFlipX(s),this.shotTween=this.currentScene.tweens.add({targets:this,props:i,ease:"Power0",yoyo:!1,repeat:0,onComplete:()=>{this.shotting=!0}})}shot(e,t,s,i){this.shotting&&(this.shotting=!1,this.setAlpha(1),this.initTween(e,t,s,i))}stopShot(){this.setAlpha(0),this.currentScene.tweens.remove(this.shotTween),this.shotting=!0}update(){}}class y extends Phaser.GameObjects.Sprite{getKeys(){return this.keys}getVulnerable(){return this.isVulnerable}constructor(e){super(e.scene,e.x,e.y,e.texture,e.frame),this.currentScene=e.scene,this.initSprite(),this.currentScene.add.existing(this),this.projectiles=new l({scene:this.currentScene,x:this.x,y:this.y,texture:"projectile",tweenProps:{y:{value:50,duration:1500,ease:"Power0"}}})}initSprite(){this.marioSize=this.currentScene.registry.get("marioSize"),this.acceleration=1e3,this.isJumping=!1,this.isDying=!1,this.isVulnerable=!0,this.vulnerableCounter=100,this.lives=this.currentScene.registry.get("lives"),this.setOrigin(.5,.5),this.setFlipX(!1),this.keys=new Map([["LEFT",this.addKey("LEFT")],["RIGHT",this.addKey("RIGHT")],["DOWN",this.addKey("DOWN")],["JUMP",this.addKey("SPACE")],["SHOT",this.addKey("d")]]),this.currentScene.physics.world.enable(this),"small"==this.marioSize?this.adjustPhysicBodyToSmallSize():this.adjustPhysicBodyToBigSize(),this.body.maxVelocity.x=100,this.body.maxVelocity.y=300}addKey(e){if(this.currentScene.input.keyboard)return this.currentScene.input.keyboard.addKey(e)}update(){this.isDying?(this.setFrame(3),this.y>288&&(this.currentScene.scene.stop("GameScene"),this.currentScene.scene.stop("HUDScene"),this.currentScene.scene.start("MenuScene"))):(this.handleInput(),this.handleAnimations()),this.isVulnerable||(this.vulnerableCounter>0?this.vulnerableCounter-=1:(this.vulnerableCounter=100,this.isVulnerable=!0))}handleInput(){this.y>288&&(this.isDying=!0),(this.body.onFloor()||this.body.touching.down||this.body.blocked.down)&&(this.isJumping=!1,this.body.setVelocityY(0));const e=this.keys.get("RIGHT"),t=this.keys.get("LEFT");e&&e.isDown?(this.body.setAccelerationX(this.acceleration),this.setFlipX(!1)):t&&t.isDown?(this.body.setAccelerationX(-this.acceleration),this.setFlipX(!0)):(this.body.setVelocityX(0),this.body.setAccelerationX(0));const s=this.keys.get("JUMP");s&&s.isDown&&!this.isJumping&&(this.body.setVelocityY(-360),this.isJumping=!0);const i=this.keys.get("SHOT");i&&i.isDown&&this.projectiles.shot(this.x,this.y,this.flipX,{x:{value:this.x+(this.flipX?-500:500),duration:3e3,ease:"Power0"},alpha:{value:0,duration:3e3,ease:"Power0"}})}handleAnimations(){if(0!==this.body.velocity.y)this.anims.stop(),this.marioSize,this.setFrame(2);else if(0!==this.body.velocity.x)(this.body.velocity.x<0&&this.body.acceleration.x>0||this.body.velocity.x>0&&this.body.acceleration.x<0)&&(this.marioSize,this.setFrame(1)),this.body.velocity.x,this.anims.play(this.marioSize+"MarioColorWalk",!0);else if(this.anims.stop(),"small"===this.marioSize)this.setFrame(0);else{const e=this.keys.get("DOWN");e&&e.isDown?this.setFrame(13):this.setFrame(0)}}growMario(){this.marioSize="big",this.currentScene.registry.set("marioSize","big"),this.adjustPhysicBodyToBigSize()}shrinkMario(){this.marioSize="small",this.currentScene.registry.set("marioSize","small"),this.adjustPhysicBodyToSmallSize()}adjustPhysicBodyToSmallSize(){this.setTexture("marioColor"),this.body.setSize(10,16),this.body.setOffset(6,2)}adjustPhysicBodyToBigSize(){this.setTexture("bigMarioColor"),this.body.setSize(10,36),this.body.setOffset(6,0)}bounceUpAfterHitEnemyOnHead(){this.currentScene.add.tween({targets:this,props:{y:this.y-10},duration:200,ease:"Power1",yoyo:!0})}gotHit(){this.isVulnerable=!1,"big"===this.marioSize?this.shrinkMario():this.lives>0?(this.lives--,this.currentScene.registry.set("lives",this.lives),this.currentScene.events.emit("livesChanged"),this.currentScene.tweens.add({targets:this,alpha:0,yoyo:!0,repeat:3,duration:100})):(this.isDying=!0,this.body.stop(),this.anims.stop(),this.body.setVelocityY(-360),this.body.checkCollision.up=!1,this.body.checkCollision.down=!1,this.body.checkCollision.left=!1,this.body.checkCollision.right=!1)}getProjectiles(){return this.projectiles}increaseLives(){this.lives++,this.currentScene.registry.set("lives",this.lives),this.currentScene.events.emit("livesChanged")}}class p extends Phaser.GameObjects.Image{constructor(e){super(e.scene,e.x,e.y,e.texture,e.frame),this.currentScene=e.scene,this.tweenProps=e.tweenProps,this.initImage(),this.initTween(),this.currentScene.add.existing(this)}initImage(){this.setOrigin(0,0),this.setFrame(0),this.currentScene.physics.world.enable(this),this.body.setSize(24,5),this.body.setAllowGravity(!1),this.body.setImmovable(!0)}initTween(){this.currentScene.tweens.add({targets:this,props:this.tweenProps,ease:"Power0",yoyo:!0,repeat:-1})}update(){}}class u extends Phaser.GameObjects.Zone{getPortalDestination(){return this.portalDestinationForMario}constructor(e){super(e.scene,e.x,e.y,e.width,e.height),this.currentScene=e.scene,this.portalDestinationForMario=e.spawn,this.initZone(),this.currentScene.add.existing(this)}initZone(){this.setOrigin(0,0),this.currentScene.physics.world.enable(this),this.body.setSize(this.height,this.width),this.body.setOffset(0,0),this.body.setAllowGravity(!1),this.body.setImmovable(!0)}update(){}}class g extends Phaser.Scene{constructor(){super({key:"GameScene"})}init(){}create(){this.map=this.make.tilemap({key:this.registry.get("level")}),this.tileset=this.map.addTilesetImage("blocks"),this.backgroundLayer=this.map.createLayer("backgroundLayer",this.tileset,0,0),this.foregroundLayer=this.map.createLayer("foregroundLayer",this.tileset,0,0),this.foregroundLayer.setName("foregroundLayer"),this.foregroundLayer.setCollisionByProperty({collide:!0}),this.portals=this.add.group({runChildUpdate:!0}),this.boxes=this.add.group({runChildUpdate:!0}),this.bricks=this.add.group({runChildUpdate:!0}),this.collectibles=this.add.group({runChildUpdate:!0}),this.enemies=this.add.group({runChildUpdate:!0}),this.platforms=this.add.group({runChildUpdate:!0}),this.loadObjectsFromTilemap(),this.physics.add.collider(this.player,this.foregroundLayer),this.physics.add.collider(this.enemies,this.foregroundLayer),this.physics.add.collider(this.enemies,this.boxes),this.physics.add.collider(this.enemies,this.bricks),this.physics.add.collider(this.player,this.bricks),this.physics.add.collider(this.player.getProjectiles(),this.foregroundLayer),this.physics.add.collider(this.player,this.boxes,this.playerHitBox,void 0,this),this.physics.add.overlap(this.player,this.enemies,this.handlePlayerEnemyOverlap,void 0,this),this.physics.add.overlap(this.player.getProjectiles(),this.enemies,this.handleProjectileEnemyOverlap,void 0,this),this.physics.add.overlap(this.player,this.portals,this.handlePlayerPortalOverlap,void 0,this),this.physics.add.collider(this.player,this.platforms,this.handlePlayerOnPlatform,void 0,this),this.physics.add.overlap(this.player,this.collectibles,this.handlePlayerCollectiblesOverlap,void 0,this),this.cameras.main.startFollow(this.player),this.cameras.main.setBounds(0,0,this.map.widthInPixels,this.map.heightInPixels)}update(){this.player.update()}loadObjectsFromTilemap(){const e=this.map.getObjectLayer("objects");e&&e.objects.forEach((e=>{"portal"===e.type&&this.portals.add(new u({scene:this,x:e.x,y:e.y,height:e.width,width:e.height,spawn:{x:e.properties[1].value,y:e.properties[2].value,dir:e.properties[0].value}}).setName(e.name)),"player"===e.type&&(this.player=new y({scene:this,x:this.registry.get("spawn").x,y:this.registry.get("spawn").y,texture:"marioColor"})),"goomba"===e.type&&this.enemies.add(new d({scene:this,x:e.x,y:e.y,texture:"goombaColor"})),"dino"==e.type&&this.enemies.add(new c({scene:this,x:e.x,y:e.y,texture:"dino"})),"brick"===e.type&&this.bricks.add(new o({scene:this,x:e.x,y:e.y,texture:"brick",value:50})),"box"===e.type&&this.boxes.add(new a({scene:this,content:e.properties[0].value,x:e.x,y:e.y,texture:"box"})),"collectible"===e.type&&this.collectibles.add(new n({scene:this,x:e.x,y:e.y,texture:e.properties[0].value,points:100})),"platformMovingUpAndDown"===e.type&&this.platforms.add(new p({scene:this,x:e.x,y:e.y,texture:"platform",tweenProps:{y:{value:50,duration:1500,ease:"Power0"}}})),"platformMovingLeftAndRight"===e.type&&this.platforms.add(new p({scene:this,x:e.x,y:e.y,texture:"platform",tweenProps:{x:{value:e.x+50,duration:1200,ease:"Power0"}}}))}))}handlePlayerEnemyOverlap(e,t){e.body.touching.down&&t.body.touching.up?(e.bounceUpAfterHitEnemyOnHead(),t.gotHitOnHead(),this.add.tween({targets:t,props:{alpha:0},duration:1e3,ease:"Power0",yoyo:!1,onComplete:function(){t.isDead()}})):e.getVulnerable()&&e.gotHit()}handleProjectileEnemyOverlap(e,t){e.alpha&&(t.gotHitFromBulletOrMarioHasStar(),e.stopShot(),this.add.tween({targets:t,props:{alpha:0},duration:1e3,ease:"Power0",yoyo:!1,onComplete:function(){t.isDead()}}))}playerHitBox(e,t){if(t.body.touching.down&&t.active){switch(t.yoyoTheBoxUpAndDown(),this.collectibles.add(t.spawnBoxContent()),t.getBoxContentString()){case"coin":t.tweenBoxContent({y:t.y-40,alpha:0},700,(function(){const e=t.getContent();e&&e.destroy()})),t.addCoinAndScore(1,100);break;case"rotatingCoin":t.tweenBoxContent({y:t.y-40,alpha:0},700,(function(){const e=t.getContent();e&&e.destroy()})),t.addCoinAndScore(1,100);break;case"flower":t.tweenBoxContent({y:t.y-8},200,(function(){const e=t.getContent();e&&e.anims.play("flower")}));break;case"mushroom":case"star":case"heart":t.popUpCollectible()}t.startHitTimeline()}}handlePlayerPortalOverlap(e,t){const s=e.getKeys().get("DOWN"),i=e.getKeys().get("RIGHT");s&&i&&(s.isDown&&"down"===t.getPortalDestination().dir||i.isDown&&"right"===t.getPortalDestination().dir?(this.registry.set("level",t.name),this.registry.set("spawn",{x:t.getPortalDestination().x,y:t.getPortalDestination().y,dir:t.getPortalDestination().dir}),this.scene.restart()):"exit"===t.name&&(this.scene.stop("GameScene"),this.scene.stop("HUDScene"),this.scene.start("MenuScene")))}handlePlayerCollectiblesOverlap(e,t){switch(t.texture.key){case"flower":case"star":default:break;case"mushroom":e.growMario();break;case"heart":this.player.increaseLives()}t.collected()}handlePlayerOnPlatform(e,t){t.body.moves&&t.body.touching.up&&e.body.touching.down}}class m extends Phaser.Scene{constructor(){super({key:"HUDScene"})}create(){this.textElements=new Map([["LIVES",this.addText(0,0,`MARIOx ${this.registry.get("lives")}`)],["WORLDTIME",this.addText(80,0,`${this.registry.get("worldTime")}`)],["SCORE",this.addText(40,8,`${this.registry.get("score")}`)],["COINS",this.addText(80,8,`${this.registry.get("coins")}`)],["WORLD",this.addText(96,8,`${this.registry.get("world")}`)],["TIME",this.addText(136,8,`${this.registry.get("time")}`)]]);const e=this.scene.get("GameScene");e.events.on("coinsChanged",this.updateCoins,this),e.events.on("scoreChanged",this.updateScore,this),e.events.on("livesChanged",this.updateLives,this),this.timer=this.time.addEvent({delay:1e3,callback:this.updateTime,callbackScope:this,loop:!0})}addText(e,t,s){return this.add.bitmapText(e,t,"font",s,8)}updateTime(){this.registry.values.time-=1;const e=this.textElements.get("TIME");e&&e.setText(`${this.registry.get("time")}`)}updateCoins(){const e=this.textElements.get("COINS");e&&e.setText(`${this.registry.get("time")}`).setText(`${this.registry.get("coins")}`).setX(80-8*(this.registry.get("coins").toString().length-1))}updateScore(){const e=this.textElements.get("SCORE");e&&e.setText(`${this.registry.get("score")}`).setX(40-8*(this.registry.get("score").toString().length-1))}updateLives(){console.log("hello there");const e=this.textElements.get("LIVES");e&&e.setText(`Lives: ${this.registry.get("lives")}`)}}class b extends Phaser.Scene{constructor(){super({key:"MenuScene"}),this.bitmapTexts=[]}init(){this.input.keyboard&&(this.startKey=this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.S)),this.startKey.isDown=!1,this.initGlobalDataManager()}create(){this.add.image(0,0,"title").setOrigin(0,0),this.bitmapTexts.push(this.add.bitmapText(this.sys.canvas.width/2-22,105,"font","START",8))}update(){this.startKey.isDown&&(this.scene.start("HUDScene"),this.scene.start("GameScene"),this.scene.bringToTop("HUDScene"))}initGlobalDataManager(){this.registry.set("time",400),this.registry.set("level","myLevel1"),this.registry.set("world","1-1"),this.registry.set("worldTime","WORLD TIME"),this.registry.set("score",0),this.registry.set("coins",0),this.registry.set("lives",2),this.registry.set("spawn",{x:32,y:44,dir:"down"}),this.registry.set("marioSize","small")}}const S={title:"Super Mario Land",url:"https://github.com/digitsensitive/phaser3-typescript",version:"2.0",width:window.innerWidth/3,height:window.innerHeight/3,zoom:3,type:Phaser.AUTO,parent:"game",scene:[r,b,m,g],input:{keyboard:!0},physics:{default:"arcade",arcade:{gravity:{y:475},debug:!1}},backgroundColor:"#03cafc",render:{pixelArt:!0,antialias:!1}};class x extends Phaser.Game{constructor(e){super(e)}}window.addEventListener("load",(()=>{new x(S)}))}},s={};function i(e){var r=s[e];if(void 0!==r)return r.exports;var n=s[e]={exports:{}};return t[e].call(n.exports,n,n.exports,i),n.exports}i.m=t,e=[],i.O=(t,s,r,n)=>{if(!s){var a=1/0;for(d=0;d<e.length;d++){for(var[s,r,n]=e[d],o=!0,h=0;h<s.length;h++)(!1&n||a>=n)&&Object.keys(i.O).every((e=>i.O[e](s[h])))?s.splice(h--,1):(o=!1,n<a&&(a=n));if(o){e.splice(d--,1);var c=r();void 0!==c&&(t=c)}}return t}n=n||0;for(var d=e.length;d>0&&e[d-1][2]>n;d--)e[d]=e[d-1];e[d]=[s,r,n]},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={179:0};i.O.j=t=>0===e[t];var t=(t,s)=>{var r,n,[a,o,h]=s,c=0;if(a.some((t=>0!==e[t]))){for(r in o)i.o(o,r)&&(i.m[r]=o[r]);if(h)var d=h(i)}for(t&&t(s);c<a.length;c++)n=a[c],i.o(e,n)&&e[n]&&e[n][0](),e[n]=0;return i.O(d)},s=self.webpackChunktype_project_template=self.webpackChunktype_project_template||[];s.forEach(t.bind(null,0)),s.push=t.bind(null,s.push.bind(s))})();var r=i.O(void 0,[216],(()=>i(608)));r=i.O(r)})();